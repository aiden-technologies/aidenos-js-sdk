/*
 * askaiden
 * The operating system to build AI Tutors
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Askaiden);
  }
}(this, function(expect, Askaiden) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DatasourceType', function() {
      beforeEach(function() {
        instance = Askaiden.DatasourceType;
      });

      it('should create an instance of DatasourceType', function() {
        // TODO: update the code to test DatasourceType
        expect(instance).to.be.a('object');
      });

      it('should have the property TXT', function() {
        expect(instance).to.have.property('TXT');
        expect(instance.TXT).to.be("TXT");
      });

      it('should have the property PDF', function() {
        expect(instance).to.have.property('PDF');
        expect(instance.PDF).to.be("PDF");
      });

      it('should have the property CSV', function() {
        expect(instance).to.have.property('CSV');
        expect(instance.CSV).to.be("CSV");
      });

      it('should have the property PPTX', function() {
        expect(instance).to.have.property('PPTX');
        expect(instance.PPTX).to.be("PPTX");
      });

      it('should have the property XLSX', function() {
        expect(instance).to.have.property('XLSX');
        expect(instance.XLSX).to.be("XLSX");
      });

      it('should have the property DOCX', function() {
        expect(instance).to.have.property('DOCX');
        expect(instance.DOCX).to.be("DOCX");
      });

      it('should have the property GOOGLE_DOC', function() {
        expect(instance).to.have.property('GOOGLE_DOC');
        expect(instance.GOOGLE_DOC).to.be("GOOGLE_DOC");
      });

      it('should have the property YOUTUBE', function() {
        expect(instance).to.have.property('YOUTUBE');
        expect(instance.YOUTUBE).to.be("YOUTUBE");
      });

      it('should have the property GITHUB_REPOSITORY', function() {
        expect(instance).to.have.property('GITHUB_REPOSITORY');
        expect(instance.GITHUB_REPOSITORY).to.be("GITHUB_REPOSITORY");
      });

      it('should have the property MARKDOWN', function() {
        expect(instance).to.have.property('MARKDOWN');
        expect(instance.MARKDOWN).to.be("MARKDOWN");
      });

      it('should have the property WEBPAGE', function() {
        expect(instance).to.have.property('WEBPAGE');
        expect(instance.WEBPAGE).to.be("WEBPAGE");
      });

      it('should have the property AIRTABLE', function() {
        expect(instance).to.have.property('AIRTABLE');
        expect(instance.AIRTABLE).to.be("AIRTABLE");
      });

      it('should have the property STRIPE', function() {
        expect(instance).to.have.property('STRIPE');
        expect(instance.STRIPE).to.be("STRIPE");
      });

      it('should have the property NOTION', function() {
        expect(instance).to.have.property('NOTION');
        expect(instance.NOTION).to.be("NOTION");
      });

      it('should have the property SITEMAP', function() {
        expect(instance).to.have.property('SITEMAP');
        expect(instance.SITEMAP).to.be("SITEMAP");
      });

      it('should have the property URL', function() {
        expect(instance).to.have.property('URL');
        expect(instance.URL).to.be("URL");
      });

      it('should have the property FUNCTION', function() {
        expect(instance).to.have.property('FUNCTION');
        expect(instance.FUNCTION).to.be("FUNCTION");
      });

    });
  });

}));
