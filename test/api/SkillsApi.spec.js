/*
 * askaiden
 * The operating system to build AI Tutors
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Askaiden);
  }
}(this, function(expect, Askaiden) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Askaiden.SkillsApi();
  });

  describe('(package)', function() {
    describe('SkillsApi', function() {
      describe('addDatasource', function() {
        it('should call addDatasource successfully', function(done) {
          // TODO: uncomment, update parameter values for addDatasource call and complete the assertions
          /*

          instance.addDatasource(body, skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkill);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('addSkillTool', function() {
        it('should call addSkillTool successfully', function(done) {
          // TODO: uncomment, update parameter values for addSkillTool call and complete the assertions
          /*

          instance.addSkillTool(body, skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkill);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSkill', function() {
        it('should call createSkill successfully', function(done) {
          // TODO: uncomment, update parameter values for createSkill call and complete the assertions
          /*

          instance.createSkill(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkill);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteSkill', function() {
        it('should call deleteSkill successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteSkill call and complete the assertions
          /*

          instance.deleteSkill(skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSkill', function() {
        it('should call getSkill successfully', function(done) {
          // TODO: uncomment, update parameter values for getSkill call and complete the assertions
          /*

          instance.getSkill(skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkill);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('invokeSkill', function() {
        it('should call invokeSkill successfully', function(done) {
          // TODO: uncomment, update parameter values for invokeSkill call and complete the assertions
          /*

          instance.invokeSkill(body, skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkillInvoke);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listRuns', function() {
        it('should call listRuns successfully', function(done) {
          // TODO: uncomment, update parameter values for listRuns call and complete the assertions
          /*

          instance.listRuns(skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.SkillRunList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSkillDatasources', function() {
        it('should call listSkillDatasources successfully', function(done) {
          // TODO: uncomment, update parameter values for listSkillDatasources call and complete the assertions
          /*

          instance.listSkillDatasources(skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.SkillDatasosurceList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSkillTools', function() {
        it('should call listSkillTools successfully', function(done) {
          // TODO: uncomment, update parameter values for listSkillTools call and complete the assertions
          /*

          instance.listSkillTools(skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.SkillToolList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSkills', function() {
        it('should call listSkills successfully', function(done) {
          // TODO: uncomment listSkills call and complete the assertions
          /*

          instance.listSkills(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.SkillList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('removeDatasource', function() {
        it('should call removeDatasource successfully', function(done) {
          // TODO: uncomment, update parameter values for removeDatasource call and complete the assertions
          /*

          instance.removeDatasource(skillId, datasourceId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('removeTool', function() {
        it('should call removeTool successfully', function(done) {
          // TODO: uncomment, update parameter values for removeTool call and complete the assertions
          /*

          instance.removeTool(skillId, toolId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateSkill', function() {
        it('should call updateSkill successfully', function(done) {
          // TODO: uncomment, update parameter values for updateSkill call and complete the assertions
          /*

          instance.updateSkill(body, skillId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseSkill);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
