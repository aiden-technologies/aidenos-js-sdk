/*
 * askaiden
 * The operating system to build AI Tutors
 *
 * OpenAPI spec version: 0.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Askaiden);
  }
}(this, function(expect, Askaiden) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Askaiden.AidenApi();
  });

  describe('(package)', function() {
    describe('AidenApi', function() {
      describe('addStepApiV1AidenAidenIdStepsPost', function() {
        it('should call addStepApiV1AidenAidenIdStepsPost successfully', function(done) {
          // TODO: uncomment, update parameter values for addStepApiV1AidenAidenIdStepsPost call and complete the assertions
          /*

          instance.addStepApiV1AidenAidenIdStepsPost(body, aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseAiden);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createApiV1AidenPost', function() {
        it('should call createApiV1AidenPost successfully', function(done) {
          // TODO: uncomment, update parameter values for createApiV1AidenPost call and complete the assertions
          /*

          instance.createApiV1AidenPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseAiden);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteApiV1AidenAidenIdDelete', function() {
        it('should call deleteApiV1AidenAidenIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteApiV1AidenAidenIdDelete call and complete the assertions
          /*

          instance.deleteApiV1AidenAidenIdDelete(aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteStepApiV1AidenAidenIdStepsStepIdDelete', function() {
        it('should call deleteStepApiV1AidenAidenIdStepsStepIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteStepApiV1AidenAidenIdStepsStepIdDelete call and complete the assertions
          /*

          instance.deleteStepApiV1AidenAidenIdStepsStepIdDelete(aidenId, stepId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getApiV1AidenAidenIdGet', function() {
        it('should call getApiV1AidenAidenIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for getApiV1AidenAidenIdGet call and complete the assertions
          /*

          instance.getApiV1AidenAidenIdGet(aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseAiden);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('invokeApiV1AidenAidenIdInvokePost', function() {
        it('should call invokeApiV1AidenAidenIdInvokePost successfully', function(done) {
          // TODO: uncomment, update parameter values for invokeApiV1AidenAidenIdInvokePost call and complete the assertions
          /*

          instance.invokeApiV1AidenAidenIdInvokePost(body, aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listApiV1AidenGet', function() {
        it('should call listApiV1AidenGet successfully', function(done) {
          // TODO: uncomment listApiV1AidenGet call and complete the assertions
          /*

          instance.listApiV1AidenGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AidenList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listStepsApiV1AidenAidenIdStepsGet', function() {
        it('should call listStepsApiV1AidenAidenIdStepsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for listStepsApiV1AidenAidenIdStepsGet call and complete the assertions
          /*

          instance.listStepsApiV1AidenAidenIdStepsGet(aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AidenList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateApiV1AidenAidenIdPatch', function() {
        it('should call updateApiV1AidenAidenIdPatch successfully', function(done) {
          // TODO: uncomment, update parameter values for updateApiV1AidenAidenIdPatch call and complete the assertions
          /*

          instance.updateApiV1AidenAidenIdPatch(body, aidenId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Askaiden.AppModelsResponseAiden);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
